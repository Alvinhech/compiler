0	CONSTsym	const
1	INTsym	int
2	IDENT	id1
3	BECOMES	=
4	PLUS	+
5	NUMBER	10
6	COMMA	,
7	IDENT	id2
8	BECOMES	=
9	MINUS	-
10	NUMBER	10
11	SEMICOLON	;
12	CHARsym	char
13	IDENT	ide3
14	COMMA	,
15	IDENT	ide4
16	Lbra	[
17	NUMBER	5
18	Rbra	]
19	SEMICOLON	;
20	VOIDsym	void
21	IDENT	fun1
22	Lpar	(
23	INTsym	int
24	IDENT	a
25	Rpar	)
26	Lbrc	{
27	IDENT	a
28	PLUS	+
29	PLUS	+
30	SEMICOLON	;
31	PRINTFsym	printf
32	Lpar	(
33	IDENT	a
34	Rpar	)
35	SEMICOLON	;
36	Rbrc	}
37	INTsym	int
38	IDENT	fun2
39	Lpar	(
40	INTsym	int
41	IDENT	a
42	Rpar	)
43	Lbrc	{
44	RETURNsym	return
45	Lpar	(
46	IDENT	a
47	PLUS	+
48	NUMBER	10
49	Rpar	)
50	SEMICOLON	;
51	Rbrc	}
52	VOIDsym	void
53	IDENT	fun3
54	Lpar	(
55	INTsym	int
56	IDENT	a
57	Rpar	)
58	Lbrc	{
59	IFsym	if
60	Lpar	(
61	IDENT	a
62	GT	>
63	ZERO	0
64	Rpar	)
65	Lbrc	{
66	PRINTFsym	printf
67	Lpar	(
68	IDENT	a
69	Rpar	)
70	SEMICOLON	;
71	IDENT	fun3
72	Lpar	(
73	IDENT	a
74	MINUS	-
75	NUMBER	1
76	Rpar	)
77	SEMICOLON	;
78	Rbrc	}
79	ELSEsym	else
80	Lbrc	{
81	SEMICOLON	;
82	Rbrc	}
83	Rbrc	}
84	VOIDsym	void
85	MAINsym	main
86	Lpar	(
87	Rpar	)
88	Lbrc	{
89	INTsym	int
90	IDENT	i
91	COMMA	,
92	IDENT	a
93	COMMA	,
94	IDENT	b
95	COMMA	,
96	IDENT	c
97	SEMICOLON	;
98	SCANFsym	scanf
99	Lpar	(
100	IDENT	a
101	COMMA	,
102	IDENT	b
103	COMMA	,
104	IDENT	c
105	Rpar	)
106	SEMICOLON	;
107	IFsym	if
108	Lpar	(
109	IDENT	a
110	GT	>
111	NUMBER	10
112	Rpar	)
113	Lbrc	{
114	IDENT	fun1
115	Lpar	(
116	IDENT	a
117	Rpar	)
118	SEMICOLON	;
119	DOsym	do
120	Lbrc	{
121	IDENT	a
122	BECOMES	=
123	IDENT	a
124	MINUS	-
125	NUMBER	1
126	SEMICOLON	;
127	Rbrc	}
128	WHILEsym	while
129	Lpar	(
130	IDENT	a
131	GT	>
132	NUMBER	5
133	Rpar	)
134	Rbrc	}
135	ELSEsym	else
136	Lbrc	{
137	IDENT	a
138	BECOMES	=
139	IDENT	fun2
140	Lpar	(
141	IDENT	b
142	Rpar	)
143	SEMICOLON	;
144	FORsym	for
145	Lpar	(
146	IDENT	i
147	BECOMES	=
148	ZERO	0
149	SEMICOLON	;
150	IDENT	i
151	LESS	<
152	NUMBER	3
153	SEMICOLON	;
154	IDENT	i
155	BECOMES	=
156	IDENT	i
157	PLUS	+
158	NUMBER	1
159	Rpar	)
160	Lbrc	{
161	PRINTFsym	printf
162	Lpar	(
163	IDENT	a
164	Rpar	)
165	SEMICOLON	;
166	IDENT	a
167	BECOMES	=
168	IDENT	a
169	PLUS	+
170	NUMBER	1
171	MINUS	-
172	IDENT	c
173	SEMICOLON	;
174	Rbrc	}
175	Rbrc	}
176	IFsym	if
177	Lpar	(
178	IDENT	b
179	GT	>
180	NUMBER	10
181	Rpar	)
182	Lbrc	{
183	PRINTFsym	printf
184	Lpar	(
185	STRING	"hello world!"
186	Rpar	)
187	SEMICOLON	;
188	Rbrc	}
189	IDENT	fun3
190	Lpar	(
191	IDENT	c
192	Rpar	)
193	SEMICOLON	;
194	Rbrc	}
195	EOF	
