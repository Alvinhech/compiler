0	INTsym	int
1	IDENT	Fib
2	Lpar	(
3	INTsym	int
4	IDENT	n
5	Rpar	)
6	Lbrc	{
7	IFsym	if
8	Lpar	(
9	IDENT	n
10	EQL	==
11	ZERO	0
12	Rpar	)
13	RETURNsym	return
14	Lpar	(
15	NUMBER	1
16	Rpar	)
17	SEMICOLON	;
18	IFsym	if
19	Lpar	(
20	IDENT	n
21	EQL	==
22	NUMBER	1
23	Rpar	)
24	RETURNsym	return
25	Lpar	(
26	NUMBER	1
27	Rpar	)
28	SEMICOLON	;
29	ELSEsym	else
30	RETURNsym	return
31	Lpar	(
32	IDENT	Fib
33	Lpar	(
34	IDENT	n
35	MINUS	-
36	NUMBER	2
37	Rpar	)
38	PLUS	+
39	IDENT	Fib
40	Lpar	(
41	IDENT	n
42	MINUS	-
43	NUMBER	1
44	Rpar	)
45	Rpar	)
46	SEMICOLON	;
47	Rbrc	}
48	VOIDsym	void
49	MAINsym	main
50	Lpar	(
51	Rpar	)
52	Lbrc	{
53	INTsym	int
54	IDENT	t
55	SEMICOLON	;
56	PRINTFsym	printf
57	Lpar	(
58	STRING	Input the Fibonacci number you want to know:
59	Rpar	)
60	SEMICOLON	;
61	SCANFsym	scanf
62	Lpar	(
63	IDENT	t
64	Rpar	)
65	SEMICOLON	;
66	IDENT	t
67	BECOMES	=
68	IDENT	Fib
69	Lpar	(
70	IDENT	t
71	Rpar	)
72	SEMICOLON	;
73	PRINTFsym	printf
74	Lpar	(
75	STRING	Fib number is:
76	COMMA	,
77	IDENT	t
78	Rpar	)
79	SEMICOLON	;
80	RETURNsym	return
81	SEMICOLON	;
82	Rbrc	}
83	EOF	
