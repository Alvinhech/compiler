0	CHARsym	char
1	IDENT	str
2	Lbra	[
3	NUMBER	10
4	Rbra	]
5	SEMICOLON	;
6	INTsym	int
7	IDENT	Fib
8	Lpar	(
9	INTsym	int
10	IDENT	n
11	Rpar	)
12	Lbrc	{
13	MAINsym	main
14	Lpar	(
15	IDENT	z
16	Rpar	)
17	SEMICOLON	;
18	Rbrc	}
19	VOIDsym	void
20	MAINsym	main
21	Lpar	(
22	Rpar	)
23	Lbrc	{
24	INTsym	int
25	IDENT	t
26	COMMA	,
27	IDENT	count
28	SEMICOLON	;
29	CHARsym	char
30	IDENT	s
31	SEMICOLON	;
32	FORsym	for
33	Lpar	(
34	IDENT	count
35	BECOMES	=
36	ZERO	0
37	SEMICOLON	;
38	IDENT	count
39	LESS	<
40	NUMBER	10
41	SEMICOLON	;
42	IDENT	count
43	BECOMES	=
44	IDENT	count
45	PLUS	+
46	NUMBER	1
47	Rpar	)
48	Lbrc	{
49	SCANFsym	scanf
50	Lpar	(
51	IDENT	s
52	Rpar	)
53	SEMICOLON	;
54	IDENT	str
55	Lbra	[
56	IDENT	count
57	Rbra	]
58	BECOMES	=
59	IDENT	s
60	SEMICOLON	;
61	Rbrc	}
62	IDENT	count
63	BECOMES	=
64	ZERO	0
65	SEMICOLON	;
66	DOsym	do
67	Lbrc	{
68	PRINTFsym	printf
69	Lpar	(
70	IDENT	str
71	Lbra	[
72	IDENT	count
73	Rbra	]
74	Rpar	)
75	SEMICOLON	;
76	IDENT	count
77	BECOMES	=
78	IDENT	count
79	PLUS	+
80	NUMBER	1
81	SEMICOLON	;
82	Rbrc	}
83	WHILEsym	while
84	Lpar	(
85	IDENT	count
86	LESS	<
87	NUMBER	10
88	Rpar	)
89	PRINTFsym	printf
90	Lpar	(
91	STRING	Input the Fibonacci number you want to know:
92	Rpar	)
93	SEMICOLON	;
94	SCANFsym	scanf
95	Lpar	(
96	IDENT	t
97	Rpar	)
98	SEMICOLON	;
99	IDENT	t
100	BECOMES	=
101	IDENT	Fib
102	Lpar	(
103	IDENT	t
104	Rpar	)
105	SEMICOLON	;
106	PRINTFsym	printf
107	Lpar	(
108	STRING	Fib number is:
109	COMMA	,
110	IDENT	t
111	Rpar	)
112	SEMICOLON	;
113	RETURNsym	return
114	SEMICOLON	;
115	RETURNsym	return
116	SEMICOLON	;
117	Rbrc	}
118	EOF	
